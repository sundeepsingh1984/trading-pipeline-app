"""empty message

Revision ID: bb3be439f06e
Revises: 
Create Date: 2021-04-21 21:18:13.027369

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'bb3be439f06e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('symbol',
    sa.Column('unique_id', sa.String(), nullable=False),
    sa.Column('ticker', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('compositeFigi', sa.String(), nullable=True),
    sa.Column('shareClassFigi', sa.String(), nullable=True),
    sa.Column('exchCode', sa.String(), nullable=True),
    sa.Column('exSymbol', sa.String(), nullable=True),
    sa.Column('primaryExch', sa.String(), nullable=True),
    sa.Column('securityType', sa.String(), nullable=True),
    sa.Column('securityType2', sa.String(), nullable=True),
    sa.Column('market', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('internal_code', sa.Integer(), nullable=True),
    sa.Column('marketSector', sa.String(), nullable=True),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('active', sa.String(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('similar', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('unique_id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=False)
    op.create_index(op.f('ix_users_id'), 'users', ['id'], unique=False)
    op.create_index(op.f('ix_users_name'), 'users', ['name'], unique=False)
    op.create_index(op.f('ix_users_password'), 'users', ['password'], unique=False)
    op.create_table('vendor',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('id')
    )
    op.create_table('company',
    sa.Column('compositeFigi', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('ticker', sa.String(), nullable=True),
    sa.Column('cik', sa.String(), nullable=True),
    sa.Column('sic', sa.String(), nullable=True),
    sa.Column('industry', sa.String(), nullable=True),
    sa.Column('sector', sa.String(), nullable=True),
    sa.Column('url', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('similar', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['compositeFigi'], ['symbol.unique_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('compositeFigi')
    )
    op.create_table('crypto',
    sa.Column('ticker', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('currencyName', sa.String(), nullable=True),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('baseName', sa.String(), nullable=True),
    sa.Column('base', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['ticker'], ['symbol.unique_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ticker')
    )
    op.create_table('forex',
    sa.Column('ticker', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('currencyName', sa.String(), nullable=True),
    sa.Column('currency', sa.String(), nullable=True),
    sa.Column('baseName', sa.String(), nullable=True),
    sa.Column('base', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['ticker'], ['symbol.unique_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ticker')
    )
    op.create_table('indices',
    sa.Column('ticker', sa.String(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('holiday ', sa.String(), nullable=True),
    sa.Column('assettype ', sa.String(), nullable=True),
    sa.Column('entitlement ', sa.String(), nullable=True),
    sa.Column('disseminationfreq ', sa.String(), nullable=True),
    sa.Column('dataset ', sa.String(), nullable=True),
    sa.Column('schedule ', sa.String(), nullable=True),
    sa.Column('brand ', sa.String(), nullable=True),
    sa.Column('series ', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['ticker'], ['symbol.unique_id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('ticker')
    )
    op.create_table('news',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('datetime', sa.DateTime(), nullable=False),
    sa.Column('symbols', postgresql.ARRAY(sa.Integer()), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('url', sa.String(), nullable=False),
    sa.Column('source', sa.String(), nullable=False),
    sa.Column('summary', sa.String(), nullable=False),
    sa.Column('image', sa.String(), nullable=False),
    sa.Column('keywords', postgresql.ARRAY(sa.String()), nullable=False),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_news_id'), 'news', ['id'], unique=False)
    op.create_table('user_strategies',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('created_by', sa.Integer(), nullable=True),
    sa.Column('strategy_name', sa.String(), nullable=False),
    sa.Column('backtested', sa.Boolean(), nullable=True),
    sa.Column('backtest_id', postgresql.ARRAY(sa.Integer()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.ForeignKeyConstraint(['created_by'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_strategies_id'), 'user_strategies', ['id'], unique=False)
    op.create_table('user_vendors_details',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('secret_key', sa.String(), nullable=True),
    sa.Column('secret_id', sa.String(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], onupdate='CASCADE', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_vendors_details_id'), 'user_vendors_details', ['id'], unique=False)
    op.create_table('vendorsymbol',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('vendor_symbol', sa.String(), nullable=True),
    sa.Column('unique_id', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['unique_id'], ['symbol.unique_id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vendor_id', 'unique_id')
    )
    op.create_table('backtests',
    sa.Column('backtest_id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('strategy_id', sa.Integer(), nullable=True),
    sa.Column('avg_return_mon', sa.Float(), nullable=True),
    sa.Column('sd_monthly', sa.Float(), nullable=True),
    sa.Column('avg_return_annual', sa.Float(), nullable=True),
    sa.Column('avg_std', sa.Float(), nullable=True),
    sa.Column('sharpe_ratio', sa.Float(), nullable=True),
    sa.Column('colmar_ratio', sa.Float(), nullable=True),
    sa.Column('worst_monthly_drw_dwn', sa.Float(), nullable=True),
    sa.Column('best_month_performance', sa.Float(), nullable=True),
    sa.Column('worst_drw_down', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['strategy_id'], ['user_strategies.id'], ),
    sa.PrimaryKeyConstraint('backtest_id')
    )
    op.create_index(op.f('ix_backtests_backtest_id'), 'backtests', ['backtest_id'], unique=False)
    op.create_table('crypto_prices_daily_adj',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_id', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('crypto_id', sa.String(), nullable=True),
    sa.Column('datetime', sa.TIMESTAMP(), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=False),
    sa.Column('vw_avg_price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['crypto_id'], ['crypto.ticker'], ),
    sa.ForeignKeyConstraint(['unique_id'], ['symbol.unique_id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vendor_id', 'crypto_id', 'datetime')
    )
    op.create_index(op.f('ix_crypto_prices_daily_adj_id'), 'crypto_prices_daily_adj', ['id'], unique=False)
    op.create_table('crypto_prices_daily_unadj',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_id', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('crypto_id', sa.String(), nullable=True),
    sa.Column('datetime', sa.TIMESTAMP(), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=False),
    sa.Column('vw_avg_price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['crypto_id'], ['crypto.ticker'], ),
    sa.ForeignKeyConstraint(['unique_id'], ['symbol.unique_id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vendor_id', 'crypto_id', 'datetime')
    )
    op.create_index(op.f('ix_crypto_prices_daily_unadj_id'), 'crypto_prices_daily_unadj', ['id'], unique=False)
    op.create_table('crypto_prices_hourly_adj',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_id', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('crypto_id', sa.String(), nullable=True),
    sa.Column('datetime', sa.TIMESTAMP(), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=False),
    sa.Column('vw_avg_price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['crypto_id'], ['crypto.ticker'], ),
    sa.ForeignKeyConstraint(['unique_id'], ['symbol.unique_id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vendor_id', 'crypto_id', 'datetime')
    )
    op.create_index(op.f('ix_crypto_prices_hourly_adj_id'), 'crypto_prices_hourly_adj', ['id'], unique=False)
    op.create_table('crypto_prices_hourly_unadj',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_id', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('crypto_id', sa.String(), nullable=True),
    sa.Column('datetime', sa.TIMESTAMP(), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=False),
    sa.Column('vw_avg_price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['crypto_id'], ['crypto.ticker'], ),
    sa.ForeignKeyConstraint(['unique_id'], ['symbol.unique_id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vendor_id', 'crypto_id', 'datetime')
    )
    op.create_index(op.f('ix_crypto_prices_hourly_unadj_id'), 'crypto_prices_hourly_unadj', ['id'], unique=False)
    op.create_table('crypto_prices_min',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_id', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('indices_id', sa.String(), nullable=True),
    sa.Column('datetime', sa.TIMESTAMP(), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=False),
    sa.Column('vw_avg_price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['indices_id'], ['indices.ticker'], ),
    sa.ForeignKeyConstraint(['unique_id'], ['symbol.unique_id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vendor_id', 'indices_id', 'datetime')
    )
    op.create_index(op.f('ix_crypto_prices_min_id'), 'crypto_prices_min', ['id'], unique=False)
    op.create_table('crypto_prices_min_adj',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_id', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('crypto_id', sa.String(), nullable=True),
    sa.Column('datetime', sa.TIMESTAMP(), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=False),
    sa.Column('vw_avg_price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['crypto_id'], ['crypto.ticker'], ),
    sa.ForeignKeyConstraint(['unique_id'], ['symbol.unique_id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vendor_id', 'crypto_id', 'datetime')
    )
    op.create_index(op.f('ix_crypto_prices_min_adj_id'), 'crypto_prices_min_adj', ['id'], unique=False)
    op.create_table('crypto_prices_min_unadj',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_id', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('crypto_id', sa.String(), nullable=True),
    sa.Column('datetime', sa.TIMESTAMP(), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=False),
    sa.Column('vw_avg_price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['crypto_id'], ['forex.ticker'], ),
    sa.ForeignKeyConstraint(['unique_id'], ['symbol.unique_id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vendor_id', 'crypto_id', 'datetime')
    )
    op.create_index(op.f('ix_crypto_prices_min_unadj_id'), 'crypto_prices_min_unadj', ['id'], unique=False)
    op.create_table('forex_prices_daily_Unadj',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_id', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('forex_id', sa.String(), nullable=True),
    sa.Column('datetime', sa.TIMESTAMP(), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=False),
    sa.Column('vw_avg_price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['forex_id'], ['forex.ticker'], ),
    sa.ForeignKeyConstraint(['unique_id'], ['symbol.unique_id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vendor_id', 'forex_id', 'datetime')
    )
    op.create_index(op.f('ix_forex_prices_daily_Unadj_id'), 'forex_prices_daily_Unadj', ['id'], unique=False)
    op.create_table('forex_prices_daily_adj',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_id', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('forex_id', sa.String(), nullable=True),
    sa.Column('datetime', sa.TIMESTAMP(), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=False),
    sa.Column('vw_avg_price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['forex_id'], ['forex.ticker'], ),
    sa.ForeignKeyConstraint(['unique_id'], ['symbol.unique_id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vendor_id', 'forex_id', 'datetime')
    )
    op.create_index(op.f('ix_forex_prices_daily_adj_id'), 'forex_prices_daily_adj', ['id'], unique=False)
    op.create_table('forex_prices_hourly_adj',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_id', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('forex_id', sa.String(), nullable=True),
    sa.Column('datetime', sa.TIMESTAMP(), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=False),
    sa.Column('vw_avg_price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['forex_id'], ['forex.ticker'], ),
    sa.ForeignKeyConstraint(['unique_id'], ['symbol.unique_id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vendor_id', 'forex_id', 'datetime')
    )
    op.create_index(op.f('ix_forex_prices_hourly_adj_id'), 'forex_prices_hourly_adj', ['id'], unique=False)
    op.create_table('forex_prices_hourly_unadj',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_id', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('forex_id', sa.String(), nullable=True),
    sa.Column('datetime', sa.TIMESTAMP(), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=False),
    sa.Column('vw_avg_price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['forex_id'], ['forex.ticker'], ),
    sa.ForeignKeyConstraint(['unique_id'], ['symbol.unique_id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vendor_id', 'forex_id', 'datetime')
    )
    op.create_index(op.f('ix_forex_prices_hourly_unadj_id'), 'forex_prices_hourly_unadj', ['id'], unique=False)
    op.create_table('forex_prices_min_adj',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_id', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('forex_id', sa.String(), nullable=True),
    sa.Column('datetime', sa.TIMESTAMP(), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=False),
    sa.Column('vw_avg_price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['forex_id'], ['forex.ticker'], ),
    sa.ForeignKeyConstraint(['unique_id'], ['symbol.unique_id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vendor_id', 'forex_id', 'datetime')
    )
    op.create_index(op.f('ix_forex_prices_min_adj_id'), 'forex_prices_min_adj', ['id'], unique=False)
    op.create_table('forex_prices_min_unadj',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_id', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('forex_id', sa.String(), nullable=True),
    sa.Column('datetime', sa.TIMESTAMP(), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=False),
    sa.Column('vw_avg_price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['forex_id'], ['forex.ticker'], ),
    sa.ForeignKeyConstraint(['unique_id'], ['symbol.unique_id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vendor_id', 'forex_id', 'datetime')
    )
    op.create_index(op.f('ix_forex_prices_min_unadj_id'), 'forex_prices_min_unadj', ['id'], unique=False)
    op.create_table('indices_prices_daily',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_id', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('indices_id', sa.String(), nullable=True),
    sa.Column('datetime', sa.TIMESTAMP(), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=False),
    sa.Column('vw_avg_price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['indices_id'], ['indices.ticker'], ),
    sa.ForeignKeyConstraint(['unique_id'], ['symbol.unique_id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vendor_id', 'indices_id', 'datetime')
    )
    op.create_index(op.f('ix_indices_prices_daily_id'), 'indices_prices_daily', ['id'], unique=False)
    op.create_table('indices_prices_hourly',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_id', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('indices_id', sa.String(), nullable=True),
    sa.Column('datetime', sa.TIMESTAMP(), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=False),
    sa.Column('vw_avg_price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['indices_id'], ['indices.ticker'], ),
    sa.ForeignKeyConstraint(['unique_id'], ['symbol.unique_id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vendor_id', 'indices_id', 'datetime')
    )
    op.create_index(op.f('ix_indices_prices_hourly_id'), 'indices_prices_hourly', ['id'], unique=False)
    op.create_table('quotes',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('company_id', sa.String(), nullable=True),
    sa.Column('symbol_id', sa.String(), nullable=True),
    sa.Column('sip_timestamp', sa.TIMESTAMP(), nullable=False),
    sa.Column('participants_timestamp', sa.TIMESTAMP(), nullable=False),
    sa.Column('indicator', postgresql.ARRAY(sa.Integer()), nullable=True),
    sa.Column('ask_price', sa.Float(), nullable=False),
    sa.Column('ask_exchange', sa.Integer(), nullable=False),
    sa.Column('trf_timestamp', sa.TIMESTAMP(), nullable=False),
    sa.Column('sequence_no', sa.Integer(), nullable=False),
    sa.Column('conditions', postgresql.ARRAY(sa.Integer()), nullable=True),
    sa.Column('bid_price', sa.Float(), nullable=False),
    sa.Column('bid_size', sa.BigInteger(), nullable=False),
    sa.Column('bid_exchange', sa.Integer(), nullable=True),
    sa.Column('ask_size', sa.BigInteger(), nullable=False),
    sa.Column('listed_on', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.compositeFigi'], ),
    sa.ForeignKeyConstraint(['symbol_id'], ['symbol.unique_id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_quotes_id'), 'quotes', ['id'], unique=False)
    op.create_table('stock_dividents',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_id', sa.String(), nullable=True),
    sa.Column('company_id', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('ticker', sa.String(), nullable=False),
    sa.Column('exDate', sa.DateTime(), nullable=True),
    sa.Column('paymentDate', sa.DateTime(), nullable=True),
    sa.Column('recordDate', sa.DateTime(), nullable=True),
    sa.Column('amount', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.compositeFigi'], ),
    sa.ForeignKeyConstraint(['unique_id'], ['symbol.unique_id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stock_dividents_id'), 'stock_dividents', ['id'], unique=False)
    op.create_table('stock_prices_daily_adj',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_id', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('company_id', sa.String(), nullable=True),
    sa.Column('datetime', sa.TIMESTAMP(), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=False),
    sa.Column('vw_avg_price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.compositeFigi'], ),
    sa.ForeignKeyConstraint(['unique_id'], ['symbol.unique_id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vendor_id', 'company_id', 'datetime')
    )
    op.create_index(op.f('ix_stock_prices_daily_adj_id'), 'stock_prices_daily_adj', ['id'], unique=False)
    op.create_table('stock_prices_daily_unadj',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_id', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('company_id', sa.String(), nullable=True),
    sa.Column('datetime', sa.TIMESTAMP(), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=False),
    sa.Column('vw_avg_price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.compositeFigi'], ),
    sa.ForeignKeyConstraint(['unique_id'], ['symbol.unique_id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vendor_id', 'company_id', 'datetime')
    )
    op.create_index(op.f('ix_stock_prices_daily_unadj_id'), 'stock_prices_daily_unadj', ['id'], unique=False)
    op.create_table('stock_prices_hourly_adj',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_id', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('company_id', sa.String(), nullable=True),
    sa.Column('datetime', sa.TIMESTAMP(), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=False),
    sa.Column('vw_avg_price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.compositeFigi'], ),
    sa.ForeignKeyConstraint(['unique_id'], ['symbol.unique_id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vendor_id', 'company_id', 'datetime')
    )
    op.create_index(op.f('ix_stock_prices_hourly_adj_id'), 'stock_prices_hourly_adj', ['id'], unique=False)
    op.create_table('stock_prices_hourly_unadj',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_id', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('company_id', sa.String(), nullable=True),
    sa.Column('datetime', sa.TIMESTAMP(), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=False),
    sa.Column('vw_avg_price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.compositeFigi'], ),
    sa.ForeignKeyConstraint(['unique_id'], ['symbol.unique_id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vendor_id', 'company_id', 'datetime')
    )
    op.create_index(op.f('ix_stock_prices_hourly_unadj_id'), 'stock_prices_hourly_unadj', ['id'], unique=False)
    op.create_table('stock_prices_min_adj',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_id', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('company_id', sa.String(), nullable=True),
    sa.Column('datetime', sa.TIMESTAMP(), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=False),
    sa.Column('vw_avg_price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.compositeFigi'], ),
    sa.ForeignKeyConstraint(['unique_id'], ['symbol.unique_id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vendor_id', 'company_id', 'datetime')
    )
    op.create_index(op.f('ix_stock_prices_min_adj_id'), 'stock_prices_min_adj', ['id'], unique=False)
    op.create_table('stock_prices_min_unadj',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_id', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('company_id', sa.String(), nullable=True),
    sa.Column('datetime', sa.TIMESTAMP(), nullable=False),
    sa.Column('open', sa.Float(), nullable=False),
    sa.Column('high', sa.Float(), nullable=False),
    sa.Column('low', sa.Float(), nullable=False),
    sa.Column('close', sa.Float(), nullable=False),
    sa.Column('volume', sa.BigInteger(), nullable=False),
    sa.Column('vw_avg_price', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['company.compositeFigi'], ),
    sa.ForeignKeyConstraint(['unique_id'], ['symbol.unique_id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('vendor_id', 'company_id', 'datetime')
    )
    op.create_index(op.f('ix_stock_prices_min_unadj_id'), 'stock_prices_min_unadj', ['id'], unique=False)
    op.create_table('stock_splits',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('unique_id', sa.String(), nullable=True),
    sa.Column('company_id', sa.String(), nullable=True),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('ticker', sa.String(), nullable=False),
    sa.Column('exDate', sa.DateTime(), nullable=True),
    sa.Column('paymentDate', sa.DateTime(), nullable=True),
    sa.Column('declaredDate', sa.DateTime(), nullable=True),
    sa.Column('ratio', sa.Float(), nullable=False),
    sa.Column('tofactor', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.compositeFigi'], ),
    sa.ForeignKeyConstraint(['unique_id'], ['symbol.unique_id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_stock_splits_id'), 'stock_splits', ['id'], unique=False)
    op.create_table('trades',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('vendor_id', sa.Integer(), nullable=True),
    sa.Column('company_id', sa.String(), nullable=True),
    sa.Column('symbol_id', sa.String(), nullable=True),
    sa.Column('exchange', sa.Integer(), nullable=False),
    sa.Column('price', sa.Float(), nullable=False),
    sa.Column('trade_id', sa.String(), nullable=False),
    sa.Column('correction', sa.Integer(), nullable=False),
    sa.Column('trf_id', sa.Integer(), nullable=False),
    sa.Column('sip_timestamp', sa.TIMESTAMP(), nullable=False),
    sa.Column('participants_timestamp', sa.TIMESTAMP(), nullable=False),
    sa.Column('trf_timestamp', sa.TIMESTAMP(), nullable=False),
    sa.Column('sequence_no', sa.BigInteger(), nullable=False),
    sa.Column('conditions', postgresql.ARRAY(sa.Integer()), nullable=True),
    sa.Column('size', sa.BigInteger(), nullable=False),
    sa.Column('listed_on', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['company_id'], ['company.compositeFigi'], ),
    sa.ForeignKeyConstraint(['symbol_id'], ['symbol.unique_id'], ),
    sa.ForeignKeyConstraint(['vendor_id'], ['vendor.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_trades_id'), 'trades', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_trades_id'), table_name='trades')
    op.drop_table('trades')
    op.drop_index(op.f('ix_stock_splits_id'), table_name='stock_splits')
    op.drop_table('stock_splits')
    op.drop_index(op.f('ix_stock_prices_min_unadj_id'), table_name='stock_prices_min_unadj')
    op.drop_table('stock_prices_min_unadj')
    op.drop_index(op.f('ix_stock_prices_min_adj_id'), table_name='stock_prices_min_adj')
    op.drop_table('stock_prices_min_adj')
    op.drop_index(op.f('ix_stock_prices_hourly_unadj_id'), table_name='stock_prices_hourly_unadj')
    op.drop_table('stock_prices_hourly_unadj')
    op.drop_index(op.f('ix_stock_prices_hourly_adj_id'), table_name='stock_prices_hourly_adj')
    op.drop_table('stock_prices_hourly_adj')
    op.drop_index(op.f('ix_stock_prices_daily_unadj_id'), table_name='stock_prices_daily_unadj')
    op.drop_table('stock_prices_daily_unadj')
    op.drop_index(op.f('ix_stock_prices_daily_adj_id'), table_name='stock_prices_daily_adj')
    op.drop_table('stock_prices_daily_adj')
    op.drop_index(op.f('ix_stock_dividents_id'), table_name='stock_dividents')
    op.drop_table('stock_dividents')
    op.drop_index(op.f('ix_quotes_id'), table_name='quotes')
    op.drop_table('quotes')
    op.drop_index(op.f('ix_indices_prices_hourly_id'), table_name='indices_prices_hourly')
    op.drop_table('indices_prices_hourly')
    op.drop_index(op.f('ix_indices_prices_daily_id'), table_name='indices_prices_daily')
    op.drop_table('indices_prices_daily')
    op.drop_index(op.f('ix_forex_prices_min_unadj_id'), table_name='forex_prices_min_unadj')
    op.drop_table('forex_prices_min_unadj')
    op.drop_index(op.f('ix_forex_prices_min_adj_id'), table_name='forex_prices_min_adj')
    op.drop_table('forex_prices_min_adj')
    op.drop_index(op.f('ix_forex_prices_hourly_unadj_id'), table_name='forex_prices_hourly_unadj')
    op.drop_table('forex_prices_hourly_unadj')
    op.drop_index(op.f('ix_forex_prices_hourly_adj_id'), table_name='forex_prices_hourly_adj')
    op.drop_table('forex_prices_hourly_adj')
    op.drop_index(op.f('ix_forex_prices_daily_adj_id'), table_name='forex_prices_daily_adj')
    op.drop_table('forex_prices_daily_adj')
    op.drop_index(op.f('ix_forex_prices_daily_Unadj_id'), table_name='forex_prices_daily_Unadj')
    op.drop_table('forex_prices_daily_Unadj')
    op.drop_index(op.f('ix_crypto_prices_min_unadj_id'), table_name='crypto_prices_min_unadj')
    op.drop_table('crypto_prices_min_unadj')
    op.drop_index(op.f('ix_crypto_prices_min_adj_id'), table_name='crypto_prices_min_adj')
    op.drop_table('crypto_prices_min_adj')
    op.drop_index(op.f('ix_crypto_prices_min_id'), table_name='crypto_prices_min')
    op.drop_table('crypto_prices_min')
    op.drop_index(op.f('ix_crypto_prices_hourly_unadj_id'), table_name='crypto_prices_hourly_unadj')
    op.drop_table('crypto_prices_hourly_unadj')
    op.drop_index(op.f('ix_crypto_prices_hourly_adj_id'), table_name='crypto_prices_hourly_adj')
    op.drop_table('crypto_prices_hourly_adj')
    op.drop_index(op.f('ix_crypto_prices_daily_unadj_id'), table_name='crypto_prices_daily_unadj')
    op.drop_table('crypto_prices_daily_unadj')
    op.drop_index(op.f('ix_crypto_prices_daily_adj_id'), table_name='crypto_prices_daily_adj')
    op.drop_table('crypto_prices_daily_adj')
    op.drop_index(op.f('ix_backtests_backtest_id'), table_name='backtests')
    op.drop_table('backtests')
    op.drop_table('vendorsymbol')
    op.drop_index(op.f('ix_user_vendors_details_id'), table_name='user_vendors_details')
    op.drop_table('user_vendors_details')
    op.drop_index(op.f('ix_user_strategies_id'), table_name='user_strategies')
    op.drop_table('user_strategies')
    op.drop_index(op.f('ix_news_id'), table_name='news')
    op.drop_table('news')
    op.drop_table('indices')
    op.drop_table('forex')
    op.drop_table('crypto')
    op.drop_table('company')
    op.drop_table('vendor')
    op.drop_index(op.f('ix_users_password'), table_name='users')
    op.drop_index(op.f('ix_users_name'), table_name='users')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    op.drop_table('symbol')
    # ### end Alembic commands ###
